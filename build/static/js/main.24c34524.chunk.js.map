{"version":3,"sources":["services/persons.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Persons","persons","numberFilter","setPersons","filteredList","filter","person","name","indexOf","map","i","key","number","onClick","window","confirm","personService","updated","renderPersonsAndFilter","PersonForm","setNotification","useState","newName","setNewName","newNumber","setNewNumber","initiateNotification","message","style","setTimeout","onSubmit","event","preventDefault","newPerson","personToChange","find","n","changedPerson","catch","concat","value","onChange","target","type","Filter","setNumberFilter","Notification","messageText","messageStyle","className","App","notification","useEffect","people","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24c34524.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, del };","import React from 'react';\nimport personService from '../services/persons'\n\nconst Persons = ({persons, numberFilter, setPersons}) => {\n\n  const handleDelete = (id) => {\n    if (window.confirm(\"Do you really want to delete this person\")) { \n      personService.del(id).then(response => {\n        let updated = persons.filter(i => id !== i.id)\n        setPersons(updated)\n      })\n    }\n  }\n  const renderPersonsAndFilter = () => {\n  let filteredList = persons; \n  filteredList = filteredList.filter((person) => {\n    return person.name.indexOf(numberFilter) !== -1;\n  })\n\n  const renderedJSX = \n    (filteredList.map((person, i) => \n      <div key={i}>\n        <div>Name: {person.name}</div> \n        <div>Number: {person.number} </div>\n        <button onClick = {() => handleDelete(person.id)}>\n          delete\n        </button>\n      </div>\n    ))\n    return renderedJSX;\n  }\n  \n  return (\n    <div>\n    {renderPersonsAndFilter()}\n    </div>\n  )\n}\n\nexport default Persons;","import React, { useState } from 'react'\nimport personService from '../services/persons'\n\nconst PersonForm = ({persons, setPersons, setNotification}) => {\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n\n    // controlled input components\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n      }\n      const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n      }\n      \n    const initiateNotification = (message, style) => {\n      setNotification(\n        [message, style]\n      )\n      setTimeout(() => {\n        setNotification([null, null])\n      }, 5000)\n    }\n\n    const addPerson = (event) => {\n      event.preventDefault()\n      const newPerson = {\n        name: newName,\n        number: newNumber, \n      }\n      // dupe handling                 \n      if (persons.map((person => person.name)).indexOf(newPerson.name) !== -1) { //dupe found\n        if (window.confirm(`${newPerson.name} is already added, do you want to update their number?`)) { \n          const personToChange = persons.find(n => n.name === newPerson.name); \n          const id = personToChange.id; \n          const changedPerson = {...personToChange, number:newPerson.number}\n\n          personService.update(\n            id, changedPerson)\n            .then(response => {\n              let updated = persons.map(i => i.id !== id ? i : response);\n              setPersons(updated)\n              initiateNotification(`Note '${newPerson.name}' was updated on the server`, 'notify');\n          })\n          .catch(() => {\n            initiateNotification('Sorry that person has already been removed from the server', 'error');\n          })\n        }\n      } else {\n        personService.create(newPerson)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n          initiateNotification(`Note '${newPerson.name}' was added to the server`, 'notify');\n        })\n      }\n      setNewName('')\n      setNewNumber('')\n    }\n\n    return (   \n    <div>\n        <form onSubmit={addPerson}>\n          <div>\n            name:\n            <input\n              value={newName}\n              onChange={handleNameChange}\n            />\n          </div>\n          <div>\n            number:\n            <input\n              value={newNumber}\n              onChange={handleNumberChange}\n            />\n          </div>\n          <div>\n            <button type=\"submit\">save</button> \n          </div>\n        </form > \n    </div>    \n    )\n}\n \nexport default PersonForm;","import React from 'react';\n\nconst Filter = ({numberFilter, setNumberFilter}) => {\n\n    const handleFilterChange = (event) => {\n        setNumberFilter(event.target.value)\n      }\n      \n    return ( \n        <div>\n            <input\n                value={numberFilter}\n                onChange={handleFilterChange}\n            />\n        </div>\n     );\n}\n \nexport default Filter;","import React from 'react';\nimport './Notification.css';\n\nconst Notification = ({message}) => {\n    \n    const messageText = message[0];\n    const messageStyle = message[1];\n\n    if (messageText === null) {\n      return null\n    }\n  \n    return (\n      <div className={messageStyle}>\n        {messageText}\n      </div>\n    )\n  }\n\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [numberFilter, setNumberFilter] = useState('');\n  const [notification, setNotification] = useState([null, null]);\n  ///todo add filteredlist to hooks\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(people => {\n          setPersons(people)\n        })\n  }, [])\n\n  return (\n    <div>\n      <Notification message = {notification} />\n      <h1>Phonebook</h1>\n      <h2>Add New</h2>\n      <PersonForm \n        persons = {persons} \n        setPersons = {setPersons} \n        setNotification = {setNotification}\n      /> \n      <h2>Filter</h2>\n      <Filter \n        numberFilter = {numberFilter} \n        setNumberFilter = {setNumberFilter} \n      />\n      <h2>Numbers</h2>\n      <Persons \n        persons = {persons} \n        numberFilter = {numberFilter} \n        setPersons = {setPersons}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}